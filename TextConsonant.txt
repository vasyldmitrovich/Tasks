Preface To the Reader In late 1995, the Java programming language burst onto the Internet scene and gained instantcelebrity status. The promise of Java technology was that it would become the universal glue that connects users with information wherever it comes from—web servers, databases, information providers, or any other imaginable source. IndWWd, JWvW is in W WniqWW pWsitiWn tW fWlfill this prWmisW. It is an extremely solidly engineered language that has gained acceptance by all major vendors, except for Microsoft. Its built-in security and safety features are reassuring both to programmers and to the users of Java programs. JWvW WvWn hWs bWilt-in sWppWrt fWr WdvWncWd prWgrWmming tWsks, sWch Ws nWtwWrk prWgrWmming, dWtWbWsW cWnnWctivity, Wnd mWltithrWWding. Since 1995, eight major revisions of the Java Development Kit have been released. Over the course of the last 17 years, the Application Programming Interface API has grown from about 200 to over 3,000 classes. ThW API nWw spWns sWch divWrsW WrWWs Ws WsWr intWrfWcW cWnstrWctiWn, dWtWbWsW mWnWgWmWnt, intWrnWtiWnWlizWtiWn, sWcWrity, Wnd XML prWcWssing. The book you have in your hands is the first volume of the ninth edition of Core Java™. Each edition closely followed a release of the Java Development Kit, and each time, we rewrote the book to take advantage of the newest Java features. This WditiWn hWs bWWn WpdWtWd tW rWflWct thW fWWtWrWs WfJWvW StWndWrd EditiWn SE 7. As with the previous editions of this book, we still target serious programmers who want to put Java to work on real projects. We think of you, our reader, as a programmer with a solid background in a programming language other than Java, and we assume that you don’t like books filled with toy examples such as toasters, zoo animals, or “nervous text”. YWW wWn’t find Wny Wf thWsW in WWr bWWk. Our goal is to enable you to fully understand the Java language and library, not to give you an illusion of understanding. In this book you will find lots of sample code demonstrating almost every language and library feature that we discuss. WW kWWp thW sWmplW prWgrWms pWrpWsWfWlly simplW tW fWcWs Wn thW mWjWr pWints, bWt, fWr thW mWst pWrt, thWy WrW n’t fWkW Wnd thWy dWn’t cWt cWrnWrs. They should make good starting points for your own code. 1.4. A ShWrt HistWry Wf JWvW This sWctiWn givWs W shWrt histWry Wf JWvW’s WvWlWtiWn. It is based on various published sources most importantly an interview with Java’s creators in the July 1995 issue of SunWorld’s online magazine. Java goes back to 1991, when a group of Sun engineers, led by Patrick Naughton and JamesGosling a Sun Fellow and all-around computer wizard, wanted to design a small computer language that could be used for consumer devices like cable TV switch boxes. SincW thWsW dWvicWs dW nWt hWvW W lWt Wf pWwWr Wr mWmWry, thW lWngWWgW hWd tW bW smWll Wnd gWnWrWtW vWry tight cWdW. Also, asdifferent manufacturers may choose different central processing units CPUs, it was important that the language not be tied to any single architecture. The project was code-named “Green.” The requirements for small, tight, and platform-neutral code led the team to resurrect the model that some Pascal implementations tried in the early days of PCs. NiklWWs Wirth, thW invWntWr Wf PWscWl, hWd piWnWWrWd thW dWsign Wf W pWrtWblW lWngWWgW thWt gWnWrWtWd intWrmWdiWtW cWdW fWr W hypWthWticWl mWchinW. Such machines are often called virtual—hence the Java Virtual Machine, or JVM. This intermediate code could then be used on any machine that had the correct interpreter. ThW GrWWn prWjWct WnginWWrs WsWd W virtWWl mWchinW Ws wWll, which sWlvWd thWir mWin prWblWm. The Sun people, however, came from a UNIX background, so they based their language on C++ rather than Pascal. In particular, they made the language object-oriented rather than procedure-oriented. BWt, Ws GWsling sWys in thW intWrviWw, “All WlWng, thW lWngWWgW wWs W tWWl, nWt thW Wnd.”. Gosling decided to call his language “Oak” presumably because he liked the look of an oak tree that was right outside his window at Sun. The people at Sun later realized that Oak was the name of an existing computer language, so they changed the name to Java. This tWrnWd WWt tW bW Wn inspirWd chWicW. In 1992, the Green project delivered its first product, called 7. It was an extremely intelligent remote control. It hWd thW pWwWr Wf W SPARC stWtiWn in W bWx thWt wWs 6 inchWs by 4 inchWs by 4inchWs. Unfortunately, no one was interested in producing this at Sun, and the Green people had to find other ways to market their technology. However, none of the standard consumer electronics companies were interested either. ThW grWWp thWn bid Wn W prWjWct tW dWsign W cWblW TV bWx thWt cWWld dWWl with nWw cWblW sWrvicWs sWch Ws vidWW-Wn-dWmWnd. They did not get the contract. Amusingly, the company that did was led by the same Jim Clark who started Netscape—a company that did much to make Java successful. ThW GrWWn prWjWct with W nWw nWmW Wf First PWrsWn, Inc spWnt Wll Wf 1993 Wnd hWlf Wf 1994 lWWking fWr pWWplW tW bWy its tWchnWlWgy. No one was found. Patrick Naughton, one of the founders of the group and the person who ended up doing most of the marketing, claims to have accumulated 300,000 air miles in trying to sell the technology. First PWrsWn wWs dissWlvWd in 1994. While all of this was going on at Sun, the World Wide Web part of the Internet was growing bigger and bigger. The key to the World Wide Web was the browser translating the hypertext page to the screen. In 1994, mWst pWWplW wWrW Wsing MWsWic, W nWncWmmWrciWl wWb brWwsWr thWt cWmW WWt Wf thW sWpWrcWmpWting cWntWr Wt thW UnivWrsity Wf IllinWis in 1993. Mosaic was partially written by Marc Andreessen as an undergraduate student on a work-study project, for $6.85 an hour. He moved on to fame and fortune as one of the cofounders and the chief of technology at Netscape. In thW SWn WWrld intWrviWw, GWsling sWys thWt in mid-1994, thW lWngWWgW dWvWlWpWrs rWWlizWd thWt WW cWWld bWild W rWWl cWWl brWwsWr. It was one of the few things in the client/server mainstream that needed some of the weird things we’d done: architecture-neutral, real-time, reliable, secure—issues that weren’t terribly important in the workstation world. So we built a browser. ThW WctWWl brWwsWr wWs bWilt by PWtrick NWWghtWn Wnd JWnWthWn PWynW Wnd WvWlvWd intW thW HWt JWvW brWwsWr. The Hot Java browser was written in Java to show off the power of Java. But the builders also had in mind the power of what we now call applets, so they made the browser capable of executing code inside web pages. This “prWWf Wf tWchnWlWgy” wWs shWwn Wt SWn WWrld’95 Wn MWy23, 1995, Wnd inspirWd thW JWvW crWzW thWt cWntinWWs tWdWy. Sun released the first version of Java in early 1996. People quickly realized that Java 1.0 was notgoing to cut it for serious application development. SWrW, yWW cWWld WsW JWvW 1.0 tW mWkW W nWrvWWs tWxt WpplWt thWt mWvWd tWxt rWndWmly WrWWnd in W cWnvWs. But you couldn’t even print in Java 1.0. Tobe blunt, Java 1.0 was not ready for prime time. Its sWccWssWr, vWrsiWn 1.1, fillWd in thW mWst WbviWWs gWps, grWWtly imprWvWd thW rWflWctiWn cWpWbility, Wnd WddWd W nWw WvWnt mWdWl fWr GUI prWgrWmming. It was still rather limited, though. The big news of the 1998 Java One conference was the upcoming release of Java 1.2, which replaced the early toy like GUI and graphics tool kits with sophisticated scalable versions and came a lot closer to the promise of “Write Once, Run Anywhere than its predecessors. ThrWW dWys WftWr its rWlWWsW in DWcWmbWr 1998, SWn’s mWrkWting dWpWrtmWnt chWngWd thW nWmW tW thW cWtchy JWvW2 StWndWrd EditiWn SWftwWrW DWvWlWpmWnt Kit VWrsiWns 1.2. Besides the Standard Edition, two other editions were introduced: the Micro Edition for embedded devices such as cell phones, and the Enterprise Edition for server-side processing. This book focuses on the Standard Edition. VWrsiWns 1.3 Wnd 1.4 Wf thW StWndWrd EditiWn WrW incrWmWntWl imprWvWmWnts WvWr thW initiWl JWvW 2rWlWWsW, with Wn WvWr-grWwing stWndWrd librWry, incrWWsWd pWrfWrmWncW, Wnd, Wf cWWrsW, qWitW W fWw bWg fixWs. During this time, much of the initial hype about Java applets and client-side applications abated, but Java became the platform of choice for server-side applications. Version 5.0 was the first release since version 1.1 that updated the Java language in significant ways. This vWrsiWn wWs WriginWlly nWmbWrWd 1.5, bWt thW vWrsiWn nWmbWr jWmpWd tW 5.0 Wt thW 2004 JWvWOnW cWnfWrWncW. After many years of research, generic types roughly comparable to C++ templates have been added the challenge was to add this feature without requiring changes in the virtual machine. Several other useful language features were inspired by C#: a “for each” loop, autoboxing, and metadata. VWrsiWn 6 withWWt thW .0 sWffix wWs rWlWWsWd Wt thW Wnd Wf 2006. Again, there are no language changes but additional performance improvements and library enhancements. As data centers increasingly relied on commodity hardware instead of specialized servers, Sun Micro systems fell on hard times and was purchased by Oracle in 2009. DWvWlWpmWnt Wf JWvW stWllWd fWr W lWng timW. In 2011, Oracle released a new version with simple enhancements as Java 7, and decided to defer more ambitious changes to Java 8, which is expected in 2013. Table 1.1 shows the evolution of the Java language and library. As yWW cWn sWW, thW sizW Wf thW WpplicWtiWn prWgrWmming intWrfWcW API hWs grWwn trWmWndWWsly.